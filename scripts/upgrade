#!/bin/bash

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================

if ynh_compare_current_package_version --comparison lt --version 12.105.0~ynh1; then
    ynh_die --message="Sorry, this version is not upgradable to the latest version :("
fi

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping $app's systemd service..." --weight=1

# Stop bservice before backup, to not loose message in case of failed upgrade and restore
ynh_systemd_action --service_name="$app" --action="stop" --log_path="/var/log/$app/$app.log"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
# ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_script_progression --message="Upgrading NodeJS..." --weight=5

ynh_install_nodejs --nodejs_version=$NODEJS_VERSION

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Upgrading source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir" --full_replace=1 --keep=".config/default.yml"
ynh_setup_source --dest_dir="$install_dir/fluent-emojis" --source_id="emojis"

chmod -R o-rwx "$install_dir"
chown -R "$app:www-data" "$install_dir"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression --message="Building app..."

pushd "$install_dir"
    ynh_use_nodejs
    env $ynh_node_load_PATH corepack enable
    env $ynh_node_load_PATH npm install -g corepack@latest
    ynh_exec_warn_less ynh_exec_as "$app" env "$ynh_node_load_PATH" NODE_ENV=production COREPACK_ENABLE_DOWNLOAD_PROMPT=0 pnpm install --frozen-lockfile --aggregate-output
    ynh_exec_warn_less ynh_exec_as "$app" env "$ynh_node_load_PATH" NODE_ENV=production COREPACK_ENABLE_DOWNLOAD_PROMPT=0 pnpm build
    ynh_exec_warn_less ynh_exec_as "$app" env "$ynh_node_load_PATH" NODE_ENV=production COREPACK_ENABLE_DOWNLOAD_PROMPT=0 pnpm migrate
popd

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression --message="Upgrading system configurations related to $app..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

# Create a dedicated systemd config
ynh_add_systemd_config
yunohost service add "$app" --description="A interplanetary blogging platform" --log="/var/log/$app/$app.log"

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting $app's systemd service..." --weight=1

ynh_systemd_action --service_name="$app" --action="start" --log_path="/var/log/$app/$app.log" --line_match="ow listening on port"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
